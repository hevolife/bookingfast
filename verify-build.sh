#!/bin/bash

# Script de v√©rification du build production

echo "üîç V√©rification du build production..."
echo ""

# 1. V√©rifier que dist/ existe
if [ -d "dist" ]; then
  echo "‚úÖ Dossier dist/ trouv√©"
else
  echo "‚ùå Dossier dist/ introuvable - Le build n'a pas √©t√© ex√©cut√©"
  exit 1
fi

# 2. V√©rifier la pr√©sence de console.log dans les fichiers JS
echo ""
echo "üîç Recherche de console.log dans les fichiers build√©s..."
CONSOLE_COUNT=$(grep -r "console\.log" dist/assets/*.js 2>/dev/null | wc -l)

if [ "$CONSOLE_COUNT" -eq 0 ]; then
  echo "‚úÖ Aucun console.log trouv√© dans le build - PARFAIT!"
else
  echo "‚ö†Ô∏è  $CONSOLE_COUNT console.log trouv√©s dans le build"
  echo ""
  echo "Fichiers concern√©s:"
  grep -r "console\.log" dist/assets/*.js 2>/dev/null | head -5
fi

# 3. V√©rifier la minification
echo ""
echo "üîç V√©rification de la minification..."
FIRST_JS=$(find dist/assets -name "*.js" -type f | head -1)
if [ -f "$FIRST_JS" ]; then
  LINES=$(wc -l < "$FIRST_JS")
  if [ "$LINES" -lt 10 ]; then
    echo "‚úÖ Code minifi√© correctement (fichier compact)"
  else
    echo "‚ö†Ô∏è  Code non minifi√© (trop de lignes: $LINES)"
  fi
fi

# 4. V√©rifier la taille des fichiers
echo ""
echo "üìä Taille du build:"
du -sh dist/

echo ""
echo "‚úÖ V√©rification termin√©e"
